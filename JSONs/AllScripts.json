{
  "Actions": [
    {
      "Name": "# BasicMeasures",
      "Enabled": "true",
      "Execute": "\r\n/*---------------------------------------------------\r\n| TITLE:                                             |\r\n| Time Intelligence Series                           |\r\n| Tabular Editor Advanced Script                     |\r\n ----------------------------------------------------\r\n| AUTHOR:                                            |\r\n| Imran Haq, PBI Queryous                            |\r\n| https://github.com/PBIQueryous                     |\r\n| STAY QUERYOUS PBIX CHAMPS!                         |\r\n ---------------------------------------------------*/\r\n\r\n\r\n /* DESCRIPTION\r\n * -----------------------------------\r\n * This script, when executed, will loop through the currently selected measure(s),\r\n * creating a series of measure(s) declared in the script below.\r\n * \r\n * e.g., from Model select [Measure] where Measure = SUM( tbl[column] ) or COUNT( tbl[column] )\r\n * -----------------------------------\r\n */\r\n\r\n // C# measure formula template:\r\n // m.Table.AddMeasure( \"MeasureName\", \"Expression\", m.DisplayFolder);\r\n\r\n/**** C# SCRIPT START ****/\r\n\r\n// SET VARIABLES\r\n// Quotation Character - helpful for wrapping \" \" around a text string within the DAX code\r\nconst string qt = \"\\\"\";\r\nconst string measure = \"[Measure]\";\r\n\r\n// Number Formatting Strings\r\nvar GBP0 = qt + \"£\" + qt + \"#,0\";\r\nvar GBP2 = qt + \"£\" + qt + \"#,0.00\";\r\nvar Whole = \"#,0\";\r\nvar Percent = \"0.0 %\";\r\nvar Decimal = \"#,0.0\";\r\nvar Number = \"#,0\";\r\nvar Currency0 = GBP0+\";\" +\"-\"+GBP0+\";\" +GBP0;\r\nvar Currency2 = GBP2+\";\" +\"-\"+GBP2+\";\" +GBP2;\r\nvar Deviation = \"+\"+Decimal+\";\" +\"-\"+Decimal+\";\"+ Decimal;\r\nvar Variance = \"▲ #,0; ▼ #,0; ∓ #,0\"; \r\n\r\n// Var RETURN text strings\r\nvar vResult = \"var _result = \";\r\nvar rReturnResult = \"RETURN\" + '\\n' + '\\t' + \"_result\";\r\nvar rReturn = \"RETURN\" + '\\n';\r\nvar ifnotBlank = '\\t' + \"// IF(  NOT ISBLANK( \";\r\nvar thenResult = \" ) ,  _result  )\";\r\nvar rResult = '\\t' + \"_result\";\r\n\r\n// MeasureName Variables\r\nvar snap = \" | SNAP\";\r\nvar cml = \" | CML\";\r\nvar cytd = \" | CYTD\";\r\nvar cfytd = \" | CFYTD\";\r\nvar cytdCml = \" | CYTD CML\";\r\nvar cfytdCml = \" | CFYTD CML\";\r\nvar rem = \" | REM\";\r\n\r\n\r\n\r\n// TimeIntel Variable Filters\r\nvar datesDate = \"Dates[Date]\";\r\nvar datesMTD = \"Dates[LatestMTD]\";\r\nvar isCFY = \"Dates[IsCFY] = TRUE\";\r\nvar isCYTD = \"Dates[IsCYTD] = TRUE\";\r\nvar maxDate = \"_maxDate\";\r\nvar curDate = \"_curDate\";\r\nvar mtdDate = \"_ytd\";\r\nvar vardatesDate = \"var \" +maxDate+ \" = MAX( \" + datesDate + \" )\";\r\nvar varlatestMTD = \"var \"+mtdDate+ \" = CALCULATE( MAX( \" +datesMTD+ \" ), REMOVEFILTERS())\";\r\nvar varmaxdatesCFY = \"var \" +maxDate+ \" = CALCULATE( MAX( \" +datesDate+ \"), \" + isCFY + \" )\";\r\nvar fiscalyear = qt+\"31/3\"+qt;\r\nvar datesFiscal = \"DATESYTD (\" + datesDate + \",\" + fiscalyear + \" )\";\r\n// Var Measure Folder\r\nvar subFolder = \"_Measures\\\\SubFolder\";\r\n\r\n// Script Variable: Creates a series of time intelligence measures for each selected measure in the Model\r\nforeach(var m in Selected.Measures) \r\n{\r\n \r\n\r\n \r\n/***************************************** MeasureStart ************************************/\r\n// DistinctCount:\r\n    m.Table.AddMeasure(\r\n    // Name\r\n    \"DistinctCount\", \r\n    // DAX expression\r\n    '\\n' + \"DISTINCTCOUNT( \" + measure + \" )\",          \r\n    // Display Folder\r\n    m.DisplayFolder                                                     \r\n    );\r\n    \r\n    // Sum:\r\n    m.Table.AddMeasure(\r\n    // Name\r\n    \"Sum\", \r\n    // DAX expression\r\n    '\\n' + \"SUM( \" + measure + \" )\",          \r\n    // Display Folder\r\n    m.DisplayFolder                                                     \r\n    );\r\n    \r\n    // Calculate:\r\n    m.Table.AddMeasure(\r\n    // Name\r\n    \"Calculate\", \r\n    // DAX expression\r\n    '\\n' + \"CALCULATE( \" + measure + \" , \" + \"TableName[Column] = FilterCondition )\" ,          \r\n    // Display Folder\r\n    m.DisplayFolder                                                     \r\n    );\r\n    \r\n    // FirstNonBlank:\r\n    m.Table.AddMeasure(\r\n    // Name\r\n    \"FirstNonBlank\", \r\n    // DAX expression\r\n    '\\n' + \"SUMX ( DISTINCT ( Table[Column] ),\"      \r\n    + '\\n' + \"CALCULATE ( FIRSTNONBLANK (  Table[Column],  0 ),\"\r\n    + '\\n' + \"Table[Column] = FilterCondtion1,\"\r\n    + '\\n' + \"Measure = FilterCondtion2)\"\r\n    + '\\n' + \")\",\r\n    // Display Folder\r\n    m.DisplayFolder                                                     \r\n    );\r\n    \r\n\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n\r\n\r\n\r\n}\r\n/**** C# SCRIPT END ****/\r\n\r\n\r\n\r\n",
      "Tooltip": "Basic Measure Templates",
      "ValidContexts": "Measure"
    },
    {
      "Name": "# COUNTA",
      "Enabled": "true",
      "Execute": "/*\r\n * Title: Auto-generate SUM measures from columns\r\n * \r\n * Author: Daniel Otykier, twitter.com/DOtykier\r\n * \r\n * This script, when executed, will loop through the currently selected columns,\r\n * creating one SUM measure for each column and also hiding the column itself.\r\n */\r\n\r\n// Quotation Character - helpful for wrapping \" \" around a text string within the DAX code\r\nconst string qt = \"\\\"\";\r\n\r\n// Number Formatting Strings\r\nvar GBP = qt + \"£\" + qt;\r\nvar Whole = \"#,0\";\r\nvar Percent = \"0.0 %\";\r\nvar Decimal = \"#,0.0\";\r\nvar Number = \"#,0\";\r\nvar Currency = GBP + \"#,0; -\" + GBP + \"#,0;\" + GBP + \"#,0\";\r\n \r\n// Loop through all currently selected columns:\r\nforeach(var c in Selected.Columns)\r\n{\r\n    var newMeasure = c.Table.AddMeasure(\r\n    \r\n    // Name    \r\n    \"# \" + c.Name,\r\n    \r\n    // DAX expression\r\n    \"COUNTA(\" + c.DaxObjectFullName + \" )\",                   \r\n    \r\n    // Display Folder\r\n    c.DisplayFolder                        \r\n    );\r\n    \r\n    // Set the format string on the new measure:\r\n    newMeasure.FormatString = Whole;\r\n\r\n    // Provide some documentation:\r\n    newMeasure.Description = \"This measure is the sum of column\" + c.DaxObjectFullName;\r\n\r\n    // Hide the base column:\r\n    c.IsHidden = true;\r\n}",
      "Tooltip": "base sum from columns",
      "ValidContexts": "Column"
    },
    {
      "Name": "# DISTINCT",
      "Enabled": "true",
      "Execute": "/*\r\n * Title: Auto-generate SUM measures from columns\r\n * \r\n * Author: Daniel Otykier, twitter.com/DOtykier\r\n * \r\n * This script, when executed, will loop through the currently selected columns,\r\n * creating one SUM measure for each column and also hiding the column itself.\r\n */\r\n\r\n// Quotation Character - helpful for wrapping \" \" around a text string within the DAX code\r\nconst string qt = \"\\\"\";\r\n\r\n// Number Formatting Strings\r\nvar GBP = qt + \"£\" + qt;\r\nvar Whole = \"#,0\";\r\nvar Percent = \"0.0 %\";\r\nvar Decimal = \"#,0.0\";\r\nvar Number = \"#,0\";\r\nvar Currency = GBP + \"#,0; -\" + GBP + \"#,0;\" + GBP + \"#,0\";\r\n \r\n// Loop through all currently selected columns:\r\nforeach(var c in Selected.Columns)\r\n{\r\n    var newMeasure = c.Table.AddMeasure(\r\n    \r\n    // Name    \r\n    \"# \" + c.Name,\r\n    \r\n    // DAX expression\r\n    \"DISTINCTCOUNT(\" + c.DaxObjectFullName + \" )\",                   \r\n    \r\n    // Display Folder\r\n    c.DisplayFolder                        \r\n    );\r\n    \r\n    // Set the format string on the new measure:\r\n    newMeasure.FormatString = Whole;\r\n\r\n    // Provide some documentation:\r\n    newMeasure.Description = \"This measure is the sum of column\" + c.DaxObjectFullName;\r\n\r\n    // Hide the base column:\r\n    c.IsHidden = true;\r\n}",
      "Tooltip": "base sum from columns",
      "ValidContexts": "Column"
    },
    {
      "Name": "# SUM",
      "Enabled": "true",
      "Execute": "/*\r\n * Title: Auto-generate SUM measures from columns\r\n * \r\n * Author: Daniel Otykier, twitter.com/DOtykier\r\n * \r\n * This script, when executed, will loop through the currently selected columns,\r\n * creating one SUM measure for each column and also hiding the column itself.\r\n */\r\n\r\n// Quotation Character - helpful for wrapping \" \" around a text string within the DAX code\r\nconst string qt = \"\\\"\";\r\n\r\n// Number Formatting Strings\r\nvar GBP = qt + \"£\" + qt;\r\nvar Whole = \"#,0\";\r\nvar Percent = \"0.0 %\";\r\nvar Decimal = \"#,0.0\";\r\nvar Number = \"#,0\";\r\nvar Currency = GBP + \"#,0; -\" + GBP + \"#,0;\" + GBP + \"#,0\";\r\n \r\n// Loop through all currently selected columns:\r\nforeach(var c in Selected.Columns)\r\n{\r\n    var newMeasure = c.Table.AddMeasure(\r\n    \r\n    // Name    \r\n    \"# \" + c.Name,\r\n    \r\n    // DAX expression\r\n    \"SUM(\" + c.DaxObjectFullName + \" )\",                   \r\n    \r\n    // Display Folder\r\n    c.DisplayFolder                        \r\n    );\r\n    \r\n    // Set the format string on the new measure:\r\n    newMeasure.FormatString = Whole;\r\n\r\n    // Provide some documentation:\r\n    newMeasure.Description = \"This measure is the sum of column\" + c.DaxObjectFullName;\r\n\r\n    // Hide the base column:\r\n    c.IsHidden = true;\r\n}",
      "Tooltip": "base sum from columns",
      "ValidContexts": "Column"
    },
    {
      "Name": "# TimeIntel",
      "Enabled": "true",
      "Execute": "\r\n\r\n  \r\n/*---------------------------------------------------\r\n| TITLE:                                             |\r\n| Time Intelligence Series                           |\r\n| Tabular Editor Advanced Script                     |\r\n ----------------------------------------------------\r\n| AUTHOR:                                            |\r\n| Imran Haq, PBI Queryous                            |\r\n| https://github.com/PBIQueryous                     |\r\n| STAY QUERYOUS PBIX CHAMPS!                         |\r\n ---------------------------------------------------*/\r\n\r\n /* SCRIPT NOTES \r\n *-----------------------------------------------------*\r\n | Inspiration and Credits:                            |\r\n | PowerBI.Tips Team    |   powerbi.tips/              |\r\n | Mike Carlo           |   twitter.com/Mike_R_Carlo   |\r\n | Seth Bauer           |   twitter.com/Seth_C_Bauer   |\r\n | Tommy Puglia         |   twitter.com/tommypuglia    |\r\n | Daniel Otykier       |   twitter.com/DOtykier       |\r\n | Enterprise DNA       |   twitter.com/_enterprisedna |\r\n | Imke Feldmann        |   twitter.com/thebiccountant |\r\n | and endless more names from the PBI community,      |\r\n | Thank you all!                                      |\r\n *-----------------------------------------------------*\r\n */\r\n\r\n /* DESCRIPTION\r\n * -----------------------------------\r\n * This script, when executed, will loop through the currently selected measure(s),\r\n * creating a series of measure(s) declared in the script below.\r\n * \r\n * e.g., from Model select [Measure] where Measure = SUM( tbl[column] ) or COUNT( tbl[column] )\r\n * -----------------------------------\r\n */\r\n\r\n // C# measure formula template:\r\n // m.Table.AddMeasure( \"MeasureName\", \"Expression\", m.DisplayFolder);\r\n\r\n/**** C# SCRIPT START ****/\r\n\r\n// SET VARIABLES\r\n// Quotation Character - helpful for wrapping \" \" around a text string within the DAX code\r\nconst string qt = \"\\\"\";\r\n\r\n// Number Formatting Strings\r\nvar GBP0 = qt + \"£\" + qt + \"#,0\";\r\nvar GBP2 = qt + \"£\" + qt + \"#,0.00\";\r\nvar Whole = \"#,0\";\r\nvar Percent = \"0.0 %\";\r\nvar Decimal = \"#,0.0\";\r\nvar Number = \"#,0\";\r\nvar Currency0 = GBP0+\";\" +\"-\"+GBP0+\";\" +GBP0;\r\nvar Currency2 = GBP2+\";\" +\"-\"+GBP2+\";\" +GBP2;\r\nvar Deviation = \"+\"+Decimal+\";\" +\"-\"+Decimal+\";\"+ Decimal;\r\n\r\n// Var RETURN text strings\r\nvar vResult = \"var _result = \";\r\nvar rReturnResult = \"RETURN\" + '\\n' + '\\t' + \"_result\";\r\nvar rReturn = \"RETURN\" + '\\n';\r\nvar ifnotBlank = '\\t' + \"// IF(  NOT ISBLANK( \";\r\nvar thenResult = \" ) ,  _result  )\";\r\nvar rResult = '\\t' + \"_result\";\r\n\r\n// MeasureName Variables\r\nvar snap = \" | SNAP\";\r\nvar cml = \" | CML\";\r\nvar cytd = \" | CYTD\";\r\nvar cfytd = \" | CFYTD\";\r\nvar cytdCml = \" | CYTD CML\";\r\nvar cfytdCml = \" | CFYTD CML\";\r\nvar rem = \" | REM\";\r\n\r\n\r\n\r\n// TimeIntel Variable Filters\r\nvar datesDate = \"Dates[Date]\";\r\nvar datesMTD = \"Dates[LatestMTD]\";\r\nvar isCFY = \"Dates[IsCFY] = TRUE\";\r\nvar isCYTD = \"Dates[IsCYTD] = TRUE\";\r\nvar maxDate = \"_maxDate\";\r\nvar curDate = \"_curDate\";\r\nvar mtdDate = \"_ytd\";\r\nvar vardatesDate = \"var \" +maxDate+ \" = MAX( \" + datesDate + \" )\";\r\nvar varlatestMTD = \"var \"+mtdDate+ \" = CALCULATE( MAX( \" +datesMTD+ \" ), REMOVEFILTERS())\";\r\nvar varmaxdatesCFY = \"var \" +maxDate+ \" = CALCULATE( MAX( \" +datesDate+ \"), \" + isCFY + \" )\";\r\nvar fiscalyear = qt+\"31/3\"+qt;\r\nvar datesFiscal = \"DATESYTD (\" + datesDate + \",\" + fiscalyear + \" )\";\r\n// Var Measure Folder\r\nvar subFolder = \"_Measures\\\\SubFolder\";\r\n\r\n// Script Variable: Creates a series of time intelligence measures for each selected measure in the Model\r\nforeach(var m in Selected.Measures) \r\n{\r\n \r\n\r\n \r\n/***************************************** MeasureStart ************************************/\r\n// Measure1: SUM\r\n    var m1 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + snap,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// snapshot - basic sum \"                           \r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        \r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + m.DaxObjectName + '\\n'\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturn\r\n        + '\\n' + rResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m1.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m1.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"base measure; basic sum; forms the reference to subsequent time-intelligence measures\"\r\n        ;                             \r\n        m1.FormatString = Whole\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure2: CML\r\n    var m2 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + cml,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// cumulative of \" + m.Name + snap + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + '\\n' + vardatesDate\r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + snap + \"], \"          // calculate\r\n        // filter context\r\n        + datesDate + \" <= \" + maxDate + \" )\" + '\\n'     // filter\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m2.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m2.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"cumulative measure; continuous until max calendar date\"\r\n        ;                             \r\n        m2.FormatString = Whole\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure3: CYTD\r\n    var m3 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + cytd,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// current year to date of \" + m.Name + snap + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        \r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + snap + \"], \"          // calculate\r\n        // filter context\r\n        + isCYTD + \" )\" + '\\n'                          // filter\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m3.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m3.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"current year to date, latest YTD is up to date today\"\r\n        ;                             \r\n        m3.FormatString = Whole\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure4: CYTD\r\n    var m4 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + cfytd,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// current fiscal year to date of \" + m.Name + snap + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + '\\n' + varlatestMTD\r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + snap + \"], \"          // calculate\r\n        // filter context\r\n        + \"KEEPFILTERS( \" + datesDate+ \" <= \" + mtdDate + \" ), \" + isCFY + \" )\" // filter\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m4.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m4.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"current fiscal year to date, latest YTD is up to date today\"\r\n        ;                             \r\n        m4.FormatString = Whole\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure5: CYTD CML\r\n    var m5 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + cytdCml,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// cumulative current ytd of \" + m.Name + cytd + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + '\\n' + vardatesDate\r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + cytd + \"], \"          // calculate\r\n        // filter context\r\n        + datesDate + \" <= \" + maxDate + \" )\" + '\\n'     // filter\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m5.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m5.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"cumulative measure; continuous until max calendar date\"\r\n        ;                             \r\n        m5.FormatString = Whole\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure6: CFYTD CML\r\n    var m6 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + cfytdCml,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// current fiscal year to date of \" + m.Name + cfytd + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + varmaxdatesCFY \r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + '\\n' + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + snap + \"], \"                              // calculate\r\n        // filter context\r\n        + '\\n' + '\\t' + datesFiscal + \", \" + '\\n' +                         // filter\r\n        \"// optional filter:\" +'\\n' +\r\n        \"/* turn on = upto current fiscal year only\"+ '\\n' +\r\n        \" * turn off = all fiscal years */\"\r\n        + '\\n' + '\\t' + datesDate + \" <= \" + maxDate + \")\"\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m6.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m6.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"current fiscal year to date, latest YTD is up to date today\"\r\n        ;                             \r\n        m6.FormatString = Whole\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure7: REM\r\n    var m7 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + rem,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// remaining future values \" + m.Name + snap + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + varlatestMTD \r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + '\\n' + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + snap + \"], \"                              // calculate\r\n        // filter context\r\n        + '\\n' + '\\t' + \r\n        \"KEEPFILTERS( \" + datesDate + \" > \" + mtdDate + \"))\"               // filter\r\n        + '\\n'\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m7.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m7.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"remaining future values beyond the latest complete MTD\"\r\n        ;                             \r\n        m7.FormatString = Whole\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure8: Actual and Future\r\n    var m8 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + \" & Forecast | YTD\",                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \r\n        \"// actual YTD and remaining future values \" \r\n        + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + varlatestMTD \r\n        + '\\n' + \r\n        \"var _actual = [\"  + m.Name + snap + \"]\"\r\n        + '\\n' + \r\n        \"var _forecast = \" \r\n        + '\\n' + '\\t' +\r\n        \"CALCULATE( [forecastMEASURE], -- eg: Forecast, Budget, Plan etc\"\r\n        + '\\n' + '\\t' + '\\t' +\r\n        \"KEEPFILTERS( \" + datesDate + \" > \" + mtdDate + \"))\"\r\n        // Result Expression Variable\r\n        + '\\n' + \r\n        vResult\r\n         + '\\n' + \r\n        \r\n        // DAX Result Expression\r\n        \" _actual + _forecast\"                                              // calculate\r\n        + '\\n'\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m8.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m8.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"actual YTD and future forecast\"\r\n        ;                             \r\n        m8.FormatString = Whole\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure9: Actual & Forecast CML\r\n    var m9 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + \" & Forecast | CML\",                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \r\n        \"// actual YTD and remaining future values cumulative totals \" \r\n        + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + '\\n' + vardatesDate\r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + \" & Forecast | YTD\" + \"], \"          // calculate\r\n        // filter context\r\n        + datesDate + \" <= \" + maxDate + \" )\"                           // filter\r\n         + '\\n'     \r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m9.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m9.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"cumulative measure; continuous until max calendar date\"\r\n        ;                             \r\n        m9.FormatString = Whole\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure10: Actual & Forecast CFYTD CML\r\n    var m10 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + \" & Forecast | CFYTD CML\",                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// current fiscal year to date of \" + m.Name + \" & Forecast | YTD\" + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + varmaxdatesCFY \r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + '\\n' + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + \" & Forecast | YTD\" + \"], \"                              // calculate\r\n        // filter context\r\n        + '\\n' + '\\t' + datesFiscal + \", \" + '\\n' +                         // filter\r\n        \"// optional filter:\" +'\\n' +\r\n        \"/* turn on = upto current fiscal year only\"+ '\\n' +\r\n        \" * turn off = all fiscal years */\"\r\n        + '\\n' + '\\t' + datesDate + \" <= \" + maxDate + \")\"\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m10.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m10.Description = \"From: \" + m.Name + \" & Forecast | YTD\" + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"current fiscal year to date, latest YTD is up to date today\"\r\n        ;                             \r\n        m10.FormatString = Whole\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n}\r\n/**** C# SCRIPT END ****/\r\n\r\n\r\n\r\n",
      "Tooltip": "TimeIntel Series £ Currency",
      "ValidContexts": "Measure"
    },
    {
      "Name": "# TimeIntel Alt",
      "Enabled": "true",
      "Execute": "\r\n\r\n  \r\n/*---------------------------------------------------\r\n| TITLE:                                             |\r\n| Time Intelligence Series                           |\r\n| Tabular Editor Advanced Script                     |\r\n ----------------------------------------------------\r\n| AUTHOR:                                            |\r\n| Imran Haq, PBI Queryous                            |\r\n| https://github.com/PBIQueryous                     |\r\n| STAY QUERYOUS PBIX CHAMPS!                         |\r\n ---------------------------------------------------*/\r\n\r\n /* SCRIPT NOTES \r\n *-----------------------------------------------------*\r\n | Inspiration and Credits:                            |\r\n | PowerBI.Tips Team    |   powerbi.tips/              |\r\n | Mike Carlo           |   twitter.com/Mike_R_Carlo   |\r\n | Seth Bauer           |   twitter.com/Seth_C_Bauer   |\r\n | Tommy Puglia         |   twitter.com/tommypuglia    |\r\n | Daniel Otykier       |   twitter.com/DOtykier       |\r\n | Enterprise DNA       |   twitter.com/_enterprisedna |\r\n | Imke Feldmann        |   twitter.com/thebiccountant |\r\n | and endless more names from the PBI community,      |\r\n | Thank you all!                                      |\r\n *-----------------------------------------------------*\r\n */\r\n\r\n /* DESCRIPTION\r\n * -----------------------------------\r\n * This script, when executed, will loop through the currently selected measure(s),\r\n * creating a series of measure(s) declared in the script below.\r\n * \r\n * e.g., from Model select [Measure] where Measure = SUM( tbl[column] ) or COUNT( tbl[column] )\r\n * -----------------------------------\r\n */\r\n\r\n // C# measure formula template:\r\n // m.Table.AddMeasure( \"MeasureName\", \"Expression\", m.DisplayFolder);\r\n\r\n/**** C# SCRIPT START ****/\r\n\r\n// SET VARIABLES\r\n// Quotation Character - helpful for wrapping \" \" around a text string within the DAX code\r\nconst string qt = \"\\\"\";\r\n\r\n// Number Formatting Strings\r\nvar GBP0 = qt + \"£\" + qt + \"#,0\";\r\nvar GBP2 = qt + \"£\" + qt + \"#,0.00\";\r\nvar Whole = \"#,0\";\r\nvar Percent = \"0.0 %\";\r\nvar Decimal = \"#,0.0\";\r\nvar Number = \"#,0\";\r\nvar Currency0 = GBP0+\";\" +\"-\"+GBP0+\";\" +GBP0;\r\nvar Currency2 = GBP2+\";\" +\"-\"+GBP2+\";\" +GBP2;\r\nvar Deviation = \"+\"+Decimal+\";\" +\"-\"+Decimal+\";\"+ Decimal;\r\nvar Variance = \"▲ #,0; ▼ #,0; ∓ #,0\"; \r\n\r\n// Var RETURN text strings\r\nvar vResult = \"var _result = \";\r\nvar rReturnResult = \"RETURN\" + '\\n' + '\\t' + \"_result\";\r\nvar rReturn = \"RETURN\" + '\\n';\r\nvar ifnotBlank = '\\t' + \"// IF(  NOT ISBLANK( \";\r\nvar thenResult = \" ) ,  _result  )\";\r\nvar rResult = '\\t' + \"_result\";\r\n\r\n// MeasureName Variables\r\nvar snap = \" | SNAP\";\r\nvar cml = \" | CML\";\r\nvar cytd = \" | CYTD\";\r\nvar cfytd = \" | CFYTD\";\r\nvar cytdCml = \" | CYTD CML\";\r\nvar cfytdCml = \" | CFYTD CML\";\r\nvar rem = \" | REM\";\r\n\r\n\r\n\r\n// TimeIntel Variable Filters\r\nvar datesDate = \"Dates[Date]\";\r\nvar datesMTD = \"Dates[LatestMTD]\";\r\nvar isCFY = \"Dates[IsCFY] = TRUE\";\r\nvar isCYTD = \"Dates[IsCYTD] = TRUE\";\r\nvar maxDate = \"_maxDate\";\r\nvar curDate = \"_curDate\";\r\nvar mtdDate = \"_ytd\";\r\nvar vardatesDate = \"var \" +maxDate+ \" = MAX( \" + datesDate + \" )\";\r\nvar varlatestMTD = \"var \"+mtdDate+ \" = CALCULATE( MAX( \" +datesMTD+ \" ), REMOVEFILTERS())\";\r\nvar varmaxdatesCFY = \"var \" +maxDate+ \" = CALCULATE( MAX( \" +datesDate+ \"), \" + isCFY + \" )\";\r\nvar fiscalyear = qt+\"31/3\"+qt;\r\nvar datesFiscal = \"DATESYTD (\" + datesDate + \",\" + fiscalyear + \" )\";\r\n// Var Measure Folder\r\nvar subFolder = \"_Measures\\\\SubFolder\";\r\n\r\n// Script Variable: Creates a series of time intelligence measures for each selected measure in the Model\r\nforeach(var m in Selected.Measures) \r\n{\r\n \r\n\r\n \r\n/***************************************** MeasureStart ************************************/\r\n// Year-to-date:\r\n    m.Table.AddMeasure(\r\n        m.Name + \" | YTD*\", // Name\r\n        \"TOTALYTD(\" + m.DaxObjectName + \", \" + datesDate + \")\", // DAX expression\r\n        m.DisplayFolder // Display Folder\r\n        ).FormatString = Number; // Set format string\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n    // Previous year:\r\n    m.Table.AddMeasure(\r\n        m.Name + \" | PY\", // Name\r\n        \"CALCULATE(\" + m.DaxObjectName + \", SAMEPERIODLASTYEAR(\" + datesDate + \"))\", // DAX expression\r\n        m.DisplayFolder // Display Folder\r\n        ).FormatString = Number; // Set format string\r\n\r\n\r\n    \r\n/***************************************** MeasureStart ************************************/\r\n    // Previous year to date:\r\n    m.Table.AddMeasure(\r\n        m.Name + \" | PYTD*\", // Name\r\n        \"CALCULATE(TOTALYTD( \" + m.DaxObjectName + \", SAMEPERIODLASTYEAR(\" + datesDate + \")))\", // DAX expression\r\n        m.DisplayFolder // Display Folder\r\n        ).FormatString = Number; // Set format string\r\n\r\n\r\n    \r\n/***************************************** MeasureStart ************************************/\r\n    // # MoM:\r\n    m.Table.AddMeasure(\r\n        // Name\r\n        m.Name + \" | MoM #\",\r\n        // DAX expression\r\n        '\\n' + \"VAR _PrevMonth = CALCULATE( \" + m.DaxObjectName + \" , PREVIOUSMONTH( \" + datesDate + \" ))\"\r\n         + '\\n' + \"VAR _CurrentMonth =  \" + m.DaxObjectName\r\n         + '\\n' + \"VAR _Result =  _CurrentMonth - _PrevMonth \"\r\n         + '\\n' + \"RETURN\" + '\\n' + \"IF(  NOT ISBLANK( \" + m.DaxObjectName + \" ) , _Result )\",\r\n        // Display Folder\r\n        m.DisplayFolder).FormatString = Variance; // Set format string\r\n\r\n        \r\n/***************************************** MeasureStart ************************************/\r\n    // % MoM:\r\n    m.Table.AddMeasure(\r\n        // Name\r\n        m.Name + \" | MoM %\",\r\n        // DAX expression\r\n        '\\n' + \"VAR _PrevMonth = CALCULATE( \" + m.DaxObjectName + \" , PREVIOUSMONTH( \" + datesDate + \" ))\"\r\n         + '\\n' + \"VAR _CurrentMonth =  \" + m.DaxObjectName\r\n         + '\\n' + \"VAR _Calc =  _CurrentMonth - _PrevMonth \"\r\n         + '\\n' + \"VAR _Result = DIVIDE( _Calc , _PrevMonth , BLANK() ) \"\r\n         + '\\n' + \"RETURN\" + '\\n' + \"IF ( _Result = -1, BLANK(), _Result )\",\r\n        // Display Folder\r\n        m.DisplayFolder).FormatString = Percent; // Set format string\r\n\r\n\r\n/***************************************** MeasureStart ************************************/        \r\n    // Year-over-year\r\n    m.Table.AddMeasure(\r\n        // Name\r\n        m.Name + \" | YoY\", \r\n        // DAX expression\r\n        '\\n' + \"var _result = \" + m.DaxObjectName + \" - [\" + m.Name + \" | PY]\"\r\n        + '\\n' + \"RETURN\" + '\\n' + \"IF(  NOT ISBLANK( \" + m.DaxObjectName + \" ) , _result )\",\r\n        m.DisplayFolder // Display Folder\r\n        ).FormatString = Variance; // Set format string\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n    // Year-over-year %:\r\n    m.Table.AddMeasure(\r\n        m.Name + \" | YoY%\", // Name\r\n        \"DIVIDE(\" + m.DaxObjectName + \", [\" + m.Name + \" | YoY])\", // DAX expression\r\n        m.DisplayFolder // Display Folder\r\n    ).FormatString = Percent; // Set format string as percentage\r\n\r\n    \r\n/***************************************** MeasureStart ************************************/\r\n    // Quarter-to-date:\r\n    m.Table.AddMeasure(\r\n        m.Name + \" | QTD\", // Name\r\n        \"TOTALQTD(\" + m.DaxObjectName + \", \" + datesDate + \")\", // DAX expression\r\n        m.DisplayFolder // Display Folder\r\n    ).FormatString = Number; // Set format string\r\n\r\n    \r\n/***************************************** MeasureStart ************************************/\r\n    // Month-to-date:\r\n    m.Table.AddMeasure(\r\n        m.Name + \" | MTD\", // Name\r\n        \"TOTALMTD(\" + m.DaxObjectName + \", \" + datesDate + \")\", // DAX expression\r\n        m.DisplayFolder // Display Folder\r\n    ).FormatString = Number; // Set format string\r\n\r\n    \r\n/***************************************** MeasureStart ************************************/\r\n    // Prev Month-to-date:\r\n    m.Table.AddMeasure(\r\n        m.Name + \" | PMTD\", // Name\r\n        \"TOTALMTD(\" + m.DaxObjectName + \", DATEADD( \" + datesDate + \", -1,MONTH))\", // DAX expression\r\n        m.DisplayFolder // Display Folder\r\n    ).FormatString = Number; // Set format string\r\n    \r\n\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n\r\n\r\n\r\n}\r\n/**** C# SCRIPT END ****/\r\n\r\n\r\n\r\n",
      "Tooltip": "TimeIntel Series (MoM, YoY etc)",
      "ValidContexts": "Measure"
    },
    {
      "Name": "# Variance Measures",
      "Enabled": "true",
      "Execute": "\r\n\r\n  \r\n/*---------------------------------------------------\r\n| TITLE:                                             |\r\n| Time Intelligence Series                           |\r\n| Tabular Editor Advanced Script                     |\r\n ----------------------------------------------------\r\n| AUTHOR:                                            |\r\n| Imran Haq, PBI Queryous                            |\r\n| https://github.com/PBIQueryous                     |\r\n| STAY QUERYOUS PBIX CHAMPS!                         |\r\n ---------------------------------------------------*/\r\n\r\n /* SCRIPT NOTES \r\n *-----------------------------------------------------*\r\n | Inspiration and Credits:                            |\r\n | Goodly               |   goodly.co.in/tag/power-bi/ |\r\n *-----------------------------------------------------*\r\n */\r\n\r\n /* DESCRIPTION\r\n * -----------------------------------\r\n * This script, when executed, will loop through the currently selected measure(s),\r\n * creating a series of measure(s) declared in the script below.\r\n * \r\n * e.g., from Model select [Measure] where Measure = SUM( tbl[column] ) or COUNT( tbl[column] )\r\n * -----------------------------------\r\n */\r\n\r\n // C# measure formula template:\r\n // m.Table.AddMeasure( \"MeasureName\", \"Expression\", m.DisplayFolder);\r\n\r\n/**** C# SCRIPT START ****/\r\n\r\n// SET VARIABLES\r\n// Quotation Character - helpful for wrapping \" \" around a text string within the DAX code\r\nconst string qt = \"\\\"\";\r\n\r\n// Number Formatting Strings\r\nvar GBP0 = qt + \"£\" + qt + \"#,0\";\r\nvar GBP2 = qt + \"£\" + qt + \"#,0.00\";\r\nvar Whole = \"#,0\";\r\nvar Percent = \"0.0 %\";\r\nvar Decimal = \"#,0.0\";\r\nvar Number = \"#,0\";\r\nvar Currency0 = GBP0+\";\" +\"-\"+GBP0+\";\" +GBP0;\r\nvar Currency2 = GBP2+\";\" +\"-\"+GBP2+\";\" +GBP2;\r\nvar Deviation = \"+\"+Decimal+\";\" +\"-\"+Decimal+\";\"+ Decimal;\r\nvar Variance = \"▲ #,0; ▼ #,0; ∓ #,0\"; \r\n\r\n// Var RETURN text strings\r\nvar vResult = \"var _result = \";\r\nvar rReturnResult = \"RETURN\" + '\\n' + '\\t' + \"_result\";\r\nvar rReturn = \"RETURN\" + '\\n';\r\nvar ifnotBlank = '\\t' + \"// IF(  NOT ISBLANK( \";\r\nvar thenResult = \" ) ,  _result  )\";\r\nvar rResult = '\\t' + \"_result\";\r\n\r\n// MeasureName Variables\r\nvar snap = \" | SNAP\";\r\nvar cml = \" | CML\";\r\nvar cytd = \" | CYTD\";\r\nvar cfytd = \" | CFYTD\";\r\nvar cytdCml = \" | CYTD CML\";\r\nvar cfytdCml = \" | CFYTD CML\";\r\nvar rem = \" | REM\";\r\n\r\n\r\n\r\n// TimeIntel Variable Filters\r\nvar datesDate = \"Dates[Date]\";\r\nvar datesMTD = \"Dates[LatestMTD]\";\r\nvar isCFY = \"Dates[IsCFY] = TRUE\";\r\nvar isCYTD = \"Dates[IsCYTD] = TRUE\";\r\nvar maxDate = \"_maxDate\";\r\nvar curDate = \"_curDate\";\r\nvar mtdDate = \"_ytd\";\r\nvar vardatesDate = \"var \" +maxDate+ \" = MAX( \" + datesDate + \" )\";\r\nvar varlatestMTD = \"var \"+mtdDate+ \" = CALCULATE( MAX( \" +datesMTD+ \" ), REMOVEFILTERS())\";\r\nvar varmaxdatesCFY = \"var \" +maxDate+ \" = CALCULATE( MAX( \" +datesDate+ \"), \" + isCFY + \" )\";\r\nvar fiscalyear = qt+\"31/3\"+qt;\r\nvar datesFiscal = \"DATESYTD (\" + datesDate + \",\" + fiscalyear + \" )\";\r\n// Var Measure Folder\r\nvar subFolder = \"_Measures\\\\SubFolder\";\r\n\r\n// Script Variable: Creates a series of time intelligence measures for each selected measure in the Model\r\nforeach(var m in Selected.Measures) \r\n{\r\n \r\n\r\n \r\n/***************************************** MeasureStart ************************************/\r\n// MinBar:\r\n    m.Table.AddMeasure(\r\n    // Name\r\n    \"MinBar\", \r\n    // DAX expression\r\n    '\\n' + \"VAR _Result = MIN( [ActualMin], [PlannedMin] )\"\r\n    + '\\n' + \"//if ActualMin less then ActualMin, if PlannedMin less then PlannedMin\"  \r\n    + '\\n' + \"RETURN\" + '\\n' + \"_Result\",          \r\n    // Display Folder\r\n    m.DisplayFolder                                                     \r\n    );\r\n    \r\n    // MaxBar:\r\n    m.Table.AddMeasure(\r\n    // Name\r\n    \"MaxBar\", \r\n    // DAX expression\r\n    '\\n' + \"VAR _Result = MAX( [ActualMax], [PlannedMax] )\"\r\n    + '\\n' + \"//if ActualMax greater then ActualMax, if PlannedMax greater then PlannedMax\"  \r\n    + '\\n' + \"RETURN\" + '\\n' + \"_Result\",          \r\n    // Display Folder\r\n    m.DisplayFolder                                                     \r\n    );\r\n    \r\n    // Above Planned:\r\n    m.Table.AddMeasure(\r\n    // Name\r\n    \"AbovePlan\", \r\n    // DAX expression\r\n    '\\n' + \"VAR _Actual = [ActualYTD]\"\r\n    + '\\n' + \"VAR _Plan = [PlannedYTD]\"\r\n    + '\\n' + \"RETURN\" \r\n    + '\\n' + \"SWITCH ( TRUE (), _Actual >= _Plan, [MaxBar] - [MinBar] )\",          \r\n    // Display Folder\r\n    m.DisplayFolder                                                     \r\n    );\r\n    \r\n    // Below Planned:\r\n    m.Table.AddMeasure(\r\n    // Name\r\n    \"BelowPlan\", \r\n    // DAX expression\r\n    '\\n' + \"VAR _Actual = [ActualYTD]\"\r\n    + '\\n' + \"VAR _Plan = [PlannedYTD]\"\r\n    + '\\n' + \"RETURN\" \r\n    + '\\n' + \"SWITCH ( TRUE (), _Plan > _Actual, [MaxBar] - [MinBar] )\",          \r\n    // Display Folder\r\n    m.DisplayFolder                                                     \r\n    );\r\n    \r\n\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n\r\n\r\n\r\n}\r\n/**** C# SCRIPT END ****/\r\n\r\n\r\n\r\n",
      "Tooltip": "TimeIntel Series (MoM, YoY etc)",
      "ValidContexts": "Measure"
    },
    {
      "Name": "£ SUM",
      "Enabled": "true",
      "Execute": "/*\r\n * Title: Auto-generate SUM measures from columns\r\n * \r\n * Author: Daniel Otykier, twitter.com/DOtykier\r\n * \r\n * This script, when executed, will loop through the currently selected columns,\r\n * creating one SUM measure for each column and also hiding the column itself.\r\n */\r\n\r\n// Quotation Character - helpful for wrapping \" \" around a text string within the DAX code\r\nconst string qt = \"\\\"\";\r\n\r\n// Number Formatting Strings\r\nvar GBP = qt + \"£\" + qt;\r\nvar Whole = \"#,0\";\r\nvar Percent = \"0.0 %\";\r\nvar Decimal = \"#,0.0\";\r\nvar Number = \"#,0\";\r\nvar Currency = GBP + \"#,0; -\" + GBP + \"#,0;\" + GBP + \"#,0\";\r\n \r\n// Loop through all currently selected columns:\r\nforeach(var c in Selected.Columns)\r\n{\r\n    var newMeasure = c.Table.AddMeasure(\r\n    \r\n    // Name    \r\n    \"£ \" + c.Name,\r\n    \r\n    // DAX expression\r\n    \"SUM(\" + c.DaxObjectFullName + \" )\",                   \r\n    \r\n    // Display Folder\r\n    c.DisplayFolder                        \r\n    );\r\n    \r\n    // Set the format string on the new measure:\r\n    newMeasure.FormatString = Currency;\r\n\r\n    // Provide some documentation:\r\n    newMeasure.Description = \"This measure is the sum of column\" + c.DaxObjectFullName;\r\n\r\n    // Hide the base column:\r\n    c.IsHidden = true;\r\n}",
      "Tooltip": "base sum from columns",
      "ValidContexts": "Column"
    },
    {
      "Name": "£ TimeIntel",
      "Enabled": "true",
      "Execute": "\r\n\r\n  \r\n/*---------------------------------------------------\r\n| TITLE:                                             |\r\n| Time Intelligence Series                           |\r\n| Tabular Editor Advanced Script                     |\r\n ----------------------------------------------------\r\n| AUTHOR:                                            |\r\n| Imran Haq, PBI Queryous                            |\r\n| https://github.com/PBIQueryous                     |\r\n| STAY QUERYOUS PBIX CHAMPS!                         |\r\n ---------------------------------------------------*/\r\n\r\n /* SCRIPT NOTES \r\n *-----------------------------------------------------*\r\n | Inspiration and Credits:                            |\r\n | PowerBI.Tips Team    |   powerbi.tips/              |\r\n | Mike Carlo           |   twitter.com/Mike_R_Carlo   |\r\n | Seth Bauer           |   twitter.com/Seth_C_Bauer   |\r\n | Tommy Puglia         |   twitter.com/tommypuglia    |\r\n | Daniel Otykier       |   twitter.com/DOtykier       |\r\n | Enterprise DNA       |   twitter.com/_enterprisedna |\r\n | Imke Feldmann        |   twitter.com/thebiccountant |\r\n | and endless more names from the PBI community,      |\r\n | Thank you all!                                      |\r\n *-----------------------------------------------------*\r\n */\r\n\r\n /* DESCRIPTION\r\n * -----------------------------------\r\n * This script, when executed, will loop through the currently selected measure(s),\r\n * creating a series of measure(s) declared in the script below.\r\n * \r\n * e.g., from Model select [Measure] where Measure = SUM( tbl[column] ) or COUNT( tbl[column] )\r\n * -----------------------------------\r\n */\r\n\r\n // C# measure formula template:\r\n // m.Table.AddMeasure( \"MeasureName\", \"Expression\", m.DisplayFolder);\r\n\r\n/**** C# SCRIPT START ****/\r\n\r\n// SET VARIABLES\r\n// Quotation Character - helpful for wrapping \" \" around a text string within the DAX code\r\nconst string qt = \"\\\"\";\r\n\r\n// Number Formatting Strings\r\nvar GBP0 = qt + \"£\" + qt + \"#,0\";\r\nvar GBP2 = qt + \"£\" + qt + \"#,0.00\";\r\nvar Whole = \"#,0\";\r\nvar Percent = \"0.0 %\";\r\nvar Decimal = \"#,0.0\";\r\nvar Number = \"#,0\";\r\nvar Currency0 = GBP0+\";\" +\"-\"+GBP0+\";\" +GBP0;\r\nvar Currency2 = GBP2+\";\" +\"-\"+GBP2+\";\" +GBP2;\r\nvar Deviation = \"+\"+Decimal+\";\" +\"-\"+Decimal+\";\"+ Decimal;\r\n\r\n// Var RETURN text strings\r\nvar vResult = \"var _result = \";\r\nvar rReturnResult = \"RETURN\" + '\\n' + '\\t' + \"_result\";\r\nvar rReturn = \"RETURN\" + '\\n';\r\nvar ifnotBlank = '\\t' + \"// IF(  NOT ISBLANK( \";\r\nvar thenResult = \" ) ,  _result  )\";\r\nvar rResult = '\\t' + \"_result\";\r\n\r\n// MeasureName Variables\r\nvar snap = \" | SNAP\";\r\nvar cml = \" | CML\";\r\nvar cytd = \" | CYTD\";\r\nvar cfytd = \" | CFYTD\";\r\nvar cytdCml = \" | CYTD CML\";\r\nvar cfytdCml = \" | CFYTD CML\";\r\nvar rem = \" | REM\";\r\n\r\n\r\n\r\n// TimeIntel Variable Filters\r\nvar datesDate = \"Dates[Date]\";\r\nvar datesMTD = \"Dates[LatestMTD]\";\r\nvar isCFY = \"Dates[IsCFY] = TRUE\";\r\nvar isCYTD = \"Dates[IsCYTD] = TRUE\";\r\nvar maxDate = \"_maxDate\";\r\nvar curDate = \"_curDate\";\r\nvar mtdDate = \"_ytd\";\r\nvar vardatesDate = \"var \" +maxDate+ \" = MAX( \" + datesDate + \" )\";\r\nvar varlatestMTD = \"var \"+mtdDate+ \" = CALCULATE( MAX( \" +datesMTD+ \" ), REMOVEFILTERS())\";\r\nvar varmaxdatesCFY = \"var \" +maxDate+ \" = CALCULATE( MAX( \" +datesDate+ \"), \" + isCFY + \" )\";\r\nvar fiscalyear = qt+\"31/3\"+qt;\r\nvar datesFiscal = \"DATESYTD (\" + datesDate + \",\" + fiscalyear + \" )\";\r\n// Var Measure Folder\r\nvar subFolder = \"_Measures\\\\SubFolder\";\r\n\r\n// Script Variable: Creates a series of time intelligence measures for each selected measure in the Model\r\nforeach(var m in Selected.Measures) \r\n{\r\n \r\n\r\n \r\n/***************************************** MeasureStart ************************************/\r\n// Measure1: SUM\r\n    var m1 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + snap,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// snapshot - basic sum \"                           \r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        \r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + m.DaxObjectName + '\\n'\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturn\r\n        + '\\n' + rResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m1.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m1.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"base measure; basic sum; forms the reference to subsequent time-intelligence measures\"\r\n        ;                             \r\n        m1.FormatString = Currency0\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure2: CML\r\n    var m2 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + cml,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// cumulative of \" + m.Name + snap + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + '\\n' + vardatesDate\r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + snap + \"], \"          // calculate\r\n        // filter context\r\n        + datesDate + \" <= \" + maxDate + \" )\" + '\\n'     // filter\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m2.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m2.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"cumulative measure; continuous until max calendar date\"\r\n        ;                             \r\n        m2.FormatString = Currency0\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure3: CYTD\r\n    var m3 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + cytd,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// current year to date of \" + m.Name + snap + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        \r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + snap + \"], \"          // calculate\r\n        // filter context\r\n        + isCYTD + \" )\" + '\\n'                          // filter\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m3.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m3.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"current year to date, latest YTD is up to date today\"\r\n        ;                             \r\n        m3.FormatString = Currency0\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure4: CYTD\r\n    var m4 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + cfytd,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// current fiscal year to date of \" + m.Name + snap + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + '\\n' + varlatestMTD\r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + snap + \"], \"          // calculate\r\n        // filter context\r\n        + \"KEEPFILTERS( \" + datesDate+ \" <= \" + mtdDate + \" ), \" + isCFY + \" )\" // filter\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m4.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m4.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"current fiscal year to date, latest YTD is up to date today\"\r\n        ;                             \r\n        m4.FormatString = Currency0\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure5: CYTD CML\r\n    var m5 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + cytdCml,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// cumulative current ytd of \" + m.Name + cytd + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + '\\n' + vardatesDate\r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + cytd + \"], \"          // calculate\r\n        // filter context\r\n        + datesDate + \" <= \" + maxDate + \" )\" + '\\n'     // filter\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m5.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m5.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"cumulative measure; continuous until max calendar date\"\r\n        ;                             \r\n        m5.FormatString = Currency0\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure6: CFYTD CML\r\n    var m6 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + cfytdCml,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// current fiscal year to date of \" + m.Name + cfytd + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + varmaxdatesCFY \r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + '\\n' + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + snap + \"], \"                              // calculate\r\n        // filter context\r\n        + '\\n' + '\\t' + datesFiscal + \", \" + '\\n' +                         // filter\r\n        \"// optional filter:\" +'\\n' +\r\n        \"/* turn on = upto current fiscal year only\"+ '\\n' +\r\n        \" * turn off = all fiscal years */\"\r\n        + '\\n' + '\\t' + datesDate + \" <= \" + maxDate + \")\"\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m6.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m6.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"current fiscal year to date, latest YTD is up to date today\"\r\n        ;                             \r\n        m6.FormatString = Currency0\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure7: REM\r\n    var m7 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + rem,                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// remaining future values \" + m.Name + snap + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + varlatestMTD \r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + '\\n' + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + snap + \"], \"                              // calculate\r\n        // filter context\r\n        + '\\n' + '\\t' + \r\n        \"KEEPFILTERS( \" + datesDate + \" > \" + mtdDate + \"))\"               // filter\r\n        + '\\n'\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m7.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m7.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"remaining future values beyond the latest complete MTD\"\r\n        ;                             \r\n        m7.FormatString = Currency0\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure8: Actual and Future\r\n    var m8 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + \" & Forecast | YTD\",                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \r\n        \"// actual YTD and remaining future values \" \r\n        + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + varlatestMTD \r\n        + '\\n' + \r\n        \"var _actual = [\"  + m.Name + snap + \"]\"\r\n        + '\\n' + \r\n        \"var _forecast = \" \r\n        + '\\n' + '\\t' +\r\n        \"CALCULATE( [forecastMEASURE], -- eg: Forecast, Budget, Plan etc\"\r\n        + '\\n' + '\\t' + '\\t' +\r\n        \"KEEPFILTERS( \" + datesDate + \" > \" + mtdDate + \"))\"\r\n        // Result Expression Variable\r\n        + '\\n' + \r\n        vResult\r\n         + '\\n' + \r\n        \r\n        // DAX Result Expression\r\n        \" _actual + _forecast\"                                              // calculate\r\n        + '\\n'\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m8.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m8.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"actual YTD and future forecast\"\r\n        ;                             \r\n        m8.FormatString = Currency0\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure9: Actual & Forecast CML\r\n    var m9 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + \" & Forecast | CML\",                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \r\n        \"// actual YTD and remaining future values cumulative totals \" \r\n        + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + '\\n' + vardatesDate\r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + \" & Forecast | YTD\" + \"], \"          // calculate\r\n        // filter context\r\n        + datesDate + \" <= \" + maxDate + \" )\"                           // filter\r\n         + '\\n'     \r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m9.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m9.Description = \"From: \" + m.Name + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"cumulative measure; continuous until max calendar date\"\r\n        ;                             \r\n        m9.FormatString = Currency0\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n/***************************************** MeasureStart ************************************/\r\n// Measure10: Actual & Forecast CFYTD CML\r\n    var m10 = m.Table.AddMeasure\r\n    (                             \r\n\r\n// startSubScript\r\n        // MeasureName\r\n        m.Name + \" & Forecast | CFYTD CML\",                               \r\n    \r\n        // DAX comment string\r\n        '\\n' + \"// current fiscal year to date of \" + m.Name + \" & Forecast | YTD\" + '\\n'\r\n        \r\n/* DAX expression START */\r\n        // DAX Variables               \r\n        + varmaxdatesCFY \r\n        \r\n        // Result Expression Variable\r\n        + '\\n' + vResult + '\\n' + \r\n        \r\n        // DAX Expression\r\n        \"CALCULATE( [\" + m.Name + \" & Forecast | YTD\" + \"], \"                              // calculate\r\n        // filter context\r\n        + '\\n' + '\\t' + datesFiscal + \", \" + '\\n' +                         // filter\r\n        \"// optional filter:\" +'\\n' +\r\n        \"/* turn on = upto current fiscal year only\"+ '\\n' +\r\n        \" * turn off = all fiscal years */\"\r\n        + '\\n' + '\\t' + datesDate + \" <= \" + maxDate + \")\"\r\n        \r\n        // Return Expression\r\n        + '\\n' + rReturnResult\r\n        \r\n        // optional in DAX\r\n        // useful in cumulative measures - returns blank if no value exists for future dates\r\n        + '\\n' + ifnotBlank + m.DaxObjectName + thenResult\r\n        );\r\n/* DAX expression END */\r\n        \r\n// Metadata\r\n        // Display Folder (default - same folder as selected)\r\n        m10.DisplayFolder \r\n        // Optional: new Folder name below\r\n        = subFolder\r\n        ;      \r\n    \r\n// Provide some documentation\r\n        m10.Description = \"From: \" + m.Name + \" & Forecast | YTD\" + \" - \" + '\\n' +\r\n        // Type metadata text here\r\n        \"current fiscal year to date, latest YTD is up to date today\"\r\n        ;                             \r\n        m10.FormatString = Currency0\r\n        ;\r\n// endSubScript\r\n/**************************************** MeasureEnd **************************************/\r\n\r\n\r\n}\r\n/**** C# SCRIPT END ****/\r\n\r\n\r\n\r\n",
      "Tooltip": "TimeIntel Series £ Currency",
      "ValidContexts": "Measure"
    },
    {
      "Name": "DaxFormatLONG",
      "Enabled": "true",
      "Execute": "/*  Cycle over all measures in model format\r\nusing DAX Formatter with Long Lines, \r\nthen add 1 line feed to the start of the measure */\r\n\r\nModel.AllMeasures.FormatDax();\r\nforeach (var m in Model.AllMeasures)\r\n    {\r\n        m.Expression = '\\n' + m.Expression ;\r\n    }\r\n    \r\n    \r\n/*Warning!  Take a backup copy first.  \r\nThis script will operate over every measure in the model. It is \r\nessential that your FromString and ToString are set to change only the\r\nspecific usage of the string that you need to change across the entire model.*/",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Name": "DaxFormatSHORT",
      "Enabled": "true",
      "Execute": "/*  Cycle over all measures in model format using\r\n    DAX Formatter with Short Lines, then add 1 line\r\n    feed to the start of the measure */\r\n\r\nFormatDax(Model.AllMeasures, true);\r\nforeach (var m in Model.AllMeasures)\r\n    {\r\n        m.Expression = '\\n' + m.Expression;\r\n    }",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Name": "ReplaceMeasureNamesALL",
      "Enabled": "true",
      "Execute": "var FromString = \"Total Sales\";\r\nvar ToString = \"Total Revenue\";\r\n\r\nforeach (var m in Model.AllMeasures)\r\n    {\r\n        m.Name = m.Name.Replace(FromString,ToString);\r\n        /* Cycle over all measures in model and replaces the \r\n           FromString with the ToString in the measure names*/\r\n    }",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Name": "ReplaceMeasureNamesSELECTED",
      "Enabled": "true",
      "Execute": "var FromString = \"|\";\r\nvar ToString = \"/\";\r\n\r\nforeach (var m in Selected.Measures)\r\n    {\r\n        m.Name = m.Name.Replace(FromString,ToString);\r\n        /* Cycle over all measures in model and replaces the \r\n           FromString with the ToString in the measure names*/\r\n    }",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Name": "ReplaceStringsALL",
      "Enabled": "true",
      "Execute": "/*Warning!  Take a backup copy first.  \r\nThis script will operate over every measure in the model. It is \r\nessential that your FromString and ToString are set to change only the\r\nspecific usage of the string that you need to change across the entire model.*/\r\n\r\nvar FromString = \"Dates[Date]\";\r\nvar ToString = \"NewDates[Date]\";\r\n\r\nforeach (var m in Model.AllMeasures)\r\n    {\r\n        m.Expression = m.Expression.Replace(FromString,ToString);\r\n        /* Cycle over all measures in model and replaces the \r\n           FromString with the ToString */\r\n    }",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Name": "ReplaceStringsSELECTED",
      "Enabled": "true",
      "Execute": "/*Warning!  Take a backup copy first.  \r\nThis script will operate over every measure in the model. It is \r\nessential that your FromString and ToString are set to change only the\r\nspecific usage of the string that you need to change across the entire model.*/\r\n\r\nvar FromString = \"-- Last complete month\";\r\nvar ToString = \"--LastCompleteMonth\";\r\n\r\nforeach (var m in Selected.Measures)\r\n    {\r\n        m.Expression = m.Expression.Replace(FromString,ToString);\r\n        /* Cycle over all measures in model and replaces the \r\n           FromString with the ToString */\r\n    }",
      "Tooltip": "",
      "ValidContexts": "Model"
    }
  ]
}
